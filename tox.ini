[tox]
env_list =
    clean
    format
    lint-weak-check
    test-build-helper
    tests

[coverage:run]
omit =
    ComfyUI/*
    */nodes/*
    */config.py
    */config-3.py
disable_warnings = 
    couldnt-parse

[coverage:paths]
source =
    hordelib/

[coverage:report]
omit =
    ComfyUI/*
    */nodes/*
    */config.py
    */config-3.py
ignore_errors = True
skip_empty = True

[testenv]
description = base evironment
passenv =
    HORDELIB_TESTING
    AIWORKER_CACHE_HOME
    TESTS_ONGOING

[testenv:clean]
deps = coverage
commands = coverage erase

[testenv:format]
description = check formatting rules
skip_install = true
deps =
    black==22.3.0
commands = black --check .

[testenv:lint]
description = check all linting rules
skip_install = true
deps =
    ruff==0.0.261
commands = ruff .

[testenv:lint-fix]
description = fix all linting rules
skip_install = true
deps =
    ruff==0.0.261
    black==22.3.0
commands = 
    black .
    ruff --fix .
    black .
    ruff --fix .

[testenv:lint-weak-check]
description = check only certain few linting rules
skip_install = true
deps =
    ruff==0.0.261
commands = 
    ruff --select COM,I .    
    python -c "print('*'*80 + '\n' + 'DEPRECATED: Favor using `tox -e lint` for checking for linting issues.\n' + '*'*80)"

[testenv:lint-weak-fix]
description = fixes only certain few linting rules
skip_install = true
deps =
    black==22.3.0
    ruff==0.0.261
commands = 
    black .
    ruff --fix --select COM,I .
    black .
    ruff --fix --select COM,I .
    python -c "print('*'*80 + '\n' + 'DEPRECATED: Favor using `tox -e lint-fix` for fixing linting issues.\n' + '*'*80)"


[testenv:test-build-helper]
description = test build_helper.py under the same conditions as the github release workflow 
skip_install = false
deps = 
    pytest>=7
    build
    loguru
    typing-extensions
    psutil
    strenum
    # NOTE: If you are here because this test fails, 
    # - include the imports missing (check the exception thrown) here 
    # - **and** in the appropriate place in `release.yaml`.
    #
    # See also `build_helper.py`, and `.github/workflows/release.yaml` for more context.

passenv =
    HORDELIB_TESTING
    AIWORKER_CACHE_HOME
    TESTS_ONGOING
commands =
    python -c "import build_helper"

[testenv:tests]
description = install pytest in a virtual environment and invoke it on the tests folder
skip_install = false
install_command = pip install {opts} {packages}
passenv =
    HORDELIB_TESTING
    AIWORKER_CACHE_HOME
    TESTS_ONGOING
setenv = 
    HORDE_MODEL_REFERENCE_GITHUB_BRANCH = "SDXL"
deps =
    pytest>=7
    pytest-sugar
    pytest-cov
    requests
    -r requirements.txt
commands =
    pytest -x tests/meta/ -k test_no_initialise_comfy_horde
    pytest -x tests {posargs} --cov --ignore=tests/meta --durations=20
